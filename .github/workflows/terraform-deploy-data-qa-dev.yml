name: Deploy to DataQA
on:
  workflow_dispatch:
    inputs:
      applyTerraform:
        type: choice
        description: 'Do you want to apply the infra-repo terraform?'
        required: true
        options:
          - plan
          - apply
      Branch:
        description: 'Branch name on which jobs will be executed'
        required: true
        default: 'main'
      TerraformTarget:
        type: choice
        description: 'Terraform Target, please provide target env name'
        required: true
        options:
          - data_qa
          - data_qa_intg

jobs:
  terraform:
    name: "Deploy - ${{ github.event.inputs.TerraformTarget }}/${{ github.event.inputs.applyTerraform }}"
    runs-on: ubuntu-latest
    env:
      TF_VAR_slack_channel: ${{ secrets.TF_VAR_SLACK_CHANNEL }}
      TF_VAR_slack_webhook_url: ${{ secrets.TF_VAR_SLACK_WEBHOOK_URL }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.Branch }}

      - name: Setup infra
        run: |
          ls -la
          pwd
          cd ./examples/basic
          echo "TF_DIR=$(pwd)" >> $GITHUB_ENV

      - name: Configure AWS credentials for dev account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Install
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.7

      - name: Terraform init
        id: init
        run: |
          cd $TF_DIR
          terraform init

      - name: Terraform plan
        id: plan
        if: ${{ github.event.inputs.applyTerraform == 'plan' }}
        run: |
          cd $TF_DIR
          terraform plan -target=module.${{ github.event.inputs.TerraformTarget }} -input=false

      - name: Terraform apply
        id: apply
        if: ${{ github.event.inputs.applyTerraform == 'apply' }}
        run: |
          cd $TF_DIR
          terraform apply -auto-approve -target=module.${{ github.event.inputs.TerraformTarget }}
